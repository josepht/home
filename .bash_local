export DEBFULLNAME="Joe Talbott"
export DEBEMAIL="joe.talbott@canonical.com"

debug_rc () {
	OUTPUT=$(env | grep 'OS_')

	if [ -n "$OUTPUT" ]; then
		echo "rc sourced"
	else
		echo "rc not sourced"
	fi

	echo "JUJU_ENV: $JUJU_ENV"
	env | grep OS_
}

rc_sourced () {
	OUTPUT=$(env | grep 'OS_')

	if [ -z $OUTPUT ]; then
		return 1
	else
		return 0
	fi
}

check_cloud () {
	OUTPUT=$(env | grep 'OS_')

	if [ -n "$JUJU_ENV" -a -n "$OUTPUT" ]; then
		echo "using cloud: $JUJU_ENV"
	else
		echo "incomplete cloud setup"
	fi
}

set_cloud () {
	CLOUD=$1

	if [ -n "$VENV" ]; then
		echo "VENV already set to $VENV, aborting..."
		return 1
	fi

	if [ -n "$2" ]; then
		VENV=$2
	fi

	case "$CLOUD" in
		(bootstack-ci-dashboard*testing)
			. ~/.bootstack.novarc
			VENV=${VENV:-ci-dash}
			export PREFIX=ci-dashboard-
			;;
	    (bootstack-ci-dashboard*)
			. ~/.bootstack-ci-dashboard-novarc
			VENV=${VENV:-ci-dash}
			export PREFIX=ci-dashboard-
			;;
		(bootstack*)
			. ~/.bootstack.novarc
			export PREFIX=ci-airline-
			;;
		(hp*)
			. ~/.hpcloud-rc
			;;
		(local) 
			. ~/.bootstack.novarc
			export PREFIX=ci-airline-
			;;
		(*)
			. ~/.canonistack/novarc
			;;
	esac
	. ~/.lp_creds-rc
	export JUJU_ENV=$CLOUD

	check_cloud
	if [ -n "$VIRTUAL_ENV" ]; then
		VENV=${VENV:-$(basename $VIRTUAL_ENV)}
	else
		VENV=${VENV:-uci-engine}
	fi
	workon $VENV
	unset VENV
}

PS1='${JUJU_ENV:+[$JUJU_ENV]}${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
export GPGKEY=A4723EF7
export SSH_LOCAL_HOSTS='^(cedar|maple|poplar)$'
