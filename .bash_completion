# file: .bash_completion
#

_get_snapcraft_test_types ()
{
	local cur
	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}

	opts="static unit integration demos"

	case "$prev" in
	unit)
		test_files=$(find snapcraft/tests -name 'test_*.py' -exec basename {} \;)
		COMPREPLY=( $(compgen -W "$test_files" -- $cur))
		return 0
		;;
	integration)
		test_files=$(find integration_tests -name 'test_*.py' -exec basename {} \;)
		COMPREPLY=( $(compgen -W "$test_files" -- $cur))
		return 0
		;;
	*)
		;;
	esac

	COMPREPLY=($(compgen -W "$opts" -- $cur))

	return 0
}
complete -F _get_snapcraft_test_types runtests.sh

_get_vms_running ()
{
    local cur
    COMPREPLY=()

    cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $(compgen -W "$(virsh -q list | cut -d' ' -f4)" -- ${cur}) )

    return 0
}

complete -F _get_vms_running vm-stop
complete -F _get_vms_running vm-view

_get_vms_inactive ()
{
    local cur
    COMPREPLY=()

    cur=${COMP_WORDS[COMP_CWORD]}
    #COMPREPLY=( $(compgen -W "$(ls ~/machines | sed 's/.*machines\///')" -- ${cur}) )
    COMPREPLY=( $(compgen -W "$(virsh -q list --inactive | cut -d' ' -f4)" -- ${cur}) )

    return 0
}

complete -F _get_vms_inactive vm-start

# schroot stuff
_get_schroots ()
{
	local cur
	local arg
	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	arg=${COMP_WORDS[COMP_CWORD-1]}

	cmd=${cur##source:}

	#echo "\ncur: '$cur', cmd: '$cmd', arg: '$arg'\n"

	if [ "$cur" = ":" -a "$arg" = "source" ]; then
	  cur=""
	fi

	COMPREPLY=( $(compgen -W "$(ls /var/lib/schroot/chroots/)" -- ${cur}) )

	return 0
}

complete -F _get_schroots schroot

# virsh
_get_virsh_domains ()
{
	local cur
	local arg
	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	arg=${COMP_WORDS[COMP_CWORD-1]}

	if [ "${arg}" = "virsh" -o "${arg}" = "help" ]; then
		COMPREPLY=( $(compgen -W "$(virsh -h | grep -E '^    [a-zA-Z]' | tr -s ' ' ' ' | sed 's/^ \([^ ]\+\) .*/\1/')" -- ${cur}) )
	elif [ "${arg}" = "stop" ]; then
		COMPREPLY=( $(compgen -W "$(virsh -q list | tr -s ' ' | cut -d ' ' -f3)" -- ${cur}) )
	elif [ "${arg}" = "start" ]; then
		COMPREPLY=( $(compgen -W "$(virsh -q list --inactive | tr -s ' ' | cut -d ' ' -f3)" -- ${cur}) )
	else
		COMPREPLY=( $(compgen -W "$(virsh -q list --all | tr -s ' ' | cut -d ' ' -f3)" -- ${cur}) )
	fi

	return 0
}

complete -F _get_virsh_domains virsh

# set_cloud
_get_juju_envs ()
{
	local cur
	local arg
	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	arg=${COMP_WORDS[COMP_CWORD-1]}

	if [ "${arg}" = "set_cloud" ]; then
		COMPREPLY=( $(compgen -W "$(python ~/bin/juju_envs.py)" -- ${cur}) )
	fi

	return 0
}

complete -F _get_juju_envs set_cloud
